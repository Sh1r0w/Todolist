<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="UserController.php" path="\Controller">
    <totals>
      <lines total="140" comments="61" code="79" executable="29" executed="29" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Controller\UserController" start="14" executable="29" executed="29" crap="7">
      <namespace name="App\Controller"/>
      <method name="listAction" signature="listAction(Doctrine\ORM\EntityManagerInterface $em)" start="31" end="36" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="createAction" signature="createAction(Symfony\Component\HttpFoundation\Request $request, Doctrine\ORM\EntityManagerInterface $em, Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface $userPasswordHasher)" start="60" end="86" crap="3" executable="15" executed="15" coverage="100"/>
      <method name="editAction" signature="editAction(App\Entity\User $user, Symfony\Component\HttpFoundation\Request $request, Doctrine\ORM\EntityManagerInterface $em, Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface $userPasswordHasher)" start="116" end="138" crap="3" executable="13" executed="13" coverage="100"/>
    </class>
    <coverage>
      <line nr="35">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="64">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="65">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="69">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="71">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="74">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="78">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="79">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="81">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="83">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="85">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="120">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="121">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="123">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="125">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="126">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="127">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="128">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="131">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="133">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="135">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="137">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="76">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
      </line>
      <line nr="129">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="130">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Bundle\FrameworkBundle\Controller\AbstractController</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Routing\Attribute\Route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Form\UserType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Doctrine\ORM\EntityManagerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Http\Attribute\IsGranted</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractController</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * The function `listAction` retrieves all users from the database and renders them in a Twig</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * template for display.</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @param EntityManagerInterface em The parameter "em" in the code snippet stands for</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * EntityManagerInterface. It is used for managing entities in the Doctrine ORM (Object-Relational</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * Mapping) system within Symfony. In this context, it is being injected into the listAction method</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * to interact with the database and retrieve all User entities using the</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @return The `listAction` method is returning a rendered template `user/list.html.twig` with an</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * array of all users retrieved from the database using the `findAll()` method of the `User` entity</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * repository.</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">Route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/user'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_list'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">IsGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ROLE_ADMIN"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">listAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">EntityManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user/list.html.twig'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'users'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * This PHP function creates a new user with admin role, hashes the password, and stores the user</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * in the database upon form submission.</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @param Request request The `` parameter in the `createAction` method is an instance of</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * the `Request` class in Symfony. It represents an HTTP request and contains information about the</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * request such as the request method, headers, parameters, and more.</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @param EntityManagerInterface em EntityManagerInterface is an interface in Doctrine that</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * provides a set of methods for managing entities and their relationships. It is used for</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * persisting, merging, removing, and querying entities in the database. In the provided code</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * snippet,  is an instance of EntityManagerInterface injected into the controller action to</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * interact with</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @param UserPasswordHasherInterface userPasswordHasher The `` parameter in the</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * `createAction` method is an instance of `UserPasswordHasherInterface`. It is used to securely</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * hash the user's password before storing it in the database. This interface provides methods for</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * hashing and checking passwords, helping to ensure the security of user</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @return If the form is submitted and valid, the user will be added to the database, a success</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * flash message will be displayed, and the user will be redirected to the 'user_list' route. If</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     * the form is not submitted or not valid, the create form view will be rendered with the form.</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">Route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/users/create'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_create'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">IsGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ROLE_ADMIN"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EntityManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserPasswordHasherInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userPasswordHasher</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createForm</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserType</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handleRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isSubmitted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$userPasswordHasher</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hashPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">persist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFlash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"L'utilisateur a bien &#xE9;t&#xE9; ajout&#xE9;."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redirectToRoute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_list'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user/create.html.twig'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'form'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createView</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="89">
        <token name="T_DOC_COMMENT">     * This PHP function edits a user's information, including updating the password securely using a</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     * user password hasher, and redirects to the user list page upon successful submission.</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     * @param User user The `` parameter in the `editAction` method represents the user entity</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     * that you want to edit. It is being passed as an argument to the method and is used to populate</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * the form with the user's current data and to update the user entity with the new data entered in</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     * the form before</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">     * @param Request request The `` parameter in the `editAction` method is an instance of the</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">     * Symfony\Component\HttpFoundation\Request class. It represents an HTTP request and contains</token>
      </line>
      <line no="98">
        <token name="T_DOC_COMMENT">     * information such as the request method, headers, parameters, and more. In this context, it is</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     * used to handle form submissions and retrieve data from the</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     * @param EntityManagerInterface em EntityManagerInterface is an interface in Doctrine that</token>
      </line>
      <line no="101">
        <token name="T_DOC_COMMENT">     * provides a set of methods for managing entities and their relationships. It is used to interact</token>
      </line>
      <line no="102">
        <token name="T_DOC_COMMENT">     * with the database, perform operations like persisting, updating, and deleting entities, and</token>
      </line>
      <line no="103">
        <token name="T_DOC_COMMENT">     * managing transactions. In the given code snippet,  is an instance of EntityManagerInterface</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     * injected</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     * @param UserPasswordHasherInterface userPasswordHasher The `` parameter in the</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     * `editAction` method is an instance of `UserPasswordHasherInterface`. It is used to securely hash</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     * the user's password before storing it in the database. This helps to ensure that user passwords</token>
      </line>
      <line no="108">
        <token name="T_DOC_COMMENT">     * are stored in a secure and encrypted format.</token>
      </line>
      <line no="109">
        <token name="T_DOC_COMMENT">     * </token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     * @return If the form is submitted and valid, the function will set the hashed password for the</token>
      </line>
      <line no="111">
        <token name="T_DOC_COMMENT">     * user, flush the changes to the database, add a success flash message, and then redirect to the</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     * 'user_list' route. If the form is not submitted or not valid, it will render the</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     * 'user/edit.html.twig' template with the form and user data.</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">Route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/users/{id}/edit'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_edit'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">IsGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ROLE_ADMIN"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">editAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EntityManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserPasswordHasherInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userPasswordHasher</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createForm</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserType</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handleRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isSubmitted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124"/>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$userPasswordHasher</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hashPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$em</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132"/>
      <line no="133">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFlash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"L'utilisateur a bien &#xE9;t&#xE9; modifi&#xE9;"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134"/>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redirectToRoute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user_list'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">render</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user/edit.html.twig'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'form'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$form</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createView</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'user'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="139">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140"/>
    </source>
  </file>
</phpunit>

<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="User.php" path="\Entity">
    <totals>
      <lines total="129" comments="27" code="102" executable="17" executed="17" percent="100.00"/>
      <methods count="11" tested="11" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\User" start="11" executable="17" executed="17" crap="11">
      <namespace name="App\Entity"/>
      <method name="getId" signature="getId(): ?int" start="43" end="46" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getEmail" signature="getEmail(): ?string" start="48" end="51" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setEmail" signature="setEmail(string $email): static" start="53" end="58" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getUserIdentifier" signature="getUserIdentifier(): string" start="65" end="68" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getRoles" signature="getRoles(): array" start="74" end="81" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="setRoles" signature="setRoles(array $roles): static" start="86" end="91" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getPassword" signature="getPassword(): string" start="96" end="99" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPassword" signature="setPassword(string $password): static" start="101" end="106" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="eraseCredentials" signature="eraseCredentials(): void" start="111" end="115" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getUsername" signature="getUsername(): ?string" start="117" end="120" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setUsername" signature="setUsername(string $username): static" start="122" end="127" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="45">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="50">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="55">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="57">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
      </line>
      <line nr="76">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
      </line>
      <line nr="78">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
      </line>
      <line nr="80">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
      </line>
      <line nr="88">
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="90">
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="98">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
      </line>
      <line nr="103">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="105">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="115">
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testListTask"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testCreateAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testToggleTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\TaskControllerTest::testDeleteTaskAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\defaultControllerTest::testDefaultController"/>
      </line>
      <line nr="119">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testListAction"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
      </line>
      <line nr="124">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
      <line nr="126">
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testUserCreate"/>
        <covered by="App\Tests\Fonctionnel\Controller\UserControllerTest::testEditAction"/>
        <covered by="App\tests\Fonctionnel\Repository\TaskRepositoryTest::testTaskRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUserRepo"/>
        <covered by="App\tests\Fonctionnel\Repository\UserRepositoryTest::testUpdatePassword"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testGood"/>
        <covered by="App\Tests\Unitaire\Entity\UserTest::testError"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Repository\UserRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Doctrine\ORM\Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\User\UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Validator\Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Entity</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">repositoryClass</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserRepository</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="12">
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\UniqueConstraint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'UNIQ_IDENTIFIER_EMAIL'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fields</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="13">
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\UniqueConstraint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'UNIQ_IDENTIFIER_USERNAME'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fields</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PasswordAuthenticatedUserInterface</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Id</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\GeneratedValue</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Column</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Column</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">length</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">180</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">Assert\Email</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">Assert\NotBlank</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @var list&lt;string&gt; The user roles</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Column</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @var string The hashed password</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Column</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">Assert\NotBlank</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">message</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Vous devez saisir un password.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">ORM\Column</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">length</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">255</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_QUALIFIED">Assert\NotBlank</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">message</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Vous devez saisir un username.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * A visual identifier that represents this user.</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUserIdentifier</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * @return list&lt;string&gt;</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">roles</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// guarantee every user at least has ROLE_USER</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_USER'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_unique</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * @param list&lt;string&gt; $roles</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * @see PasswordAuthenticatedUserInterface</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="107"/>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="109">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">eraseCredentials</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If you store any temporary, sensitive data on the user, clear it here</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// $this-&gt;plainPassword = null;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="129"/>
    </source>
  </file>
</phpunit>
